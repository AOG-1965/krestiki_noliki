# Импорт библиотек и модулей
import tkinter as tk            # для работы с графическим интерфейсом
from tkinter import messagebox  # создание диалоговых окон

# Создание игрового окна
window = tk.Tk()                # для дальнейшей работы с окном
window.title("Крестики-нолики") # заголовок окна
window.geometry("300x350")      # размер окна

# Настройка начальной логики игры
current_player = "X"            # Переменная для сохранения текущего игрока
buttons = []                    # Cписок для хранения всех кнопок игрового поля

# Функция контроля и перехода хода
def on_click(row, col):         # для передачи значения переменных row и col).
    global current_player       # отслеживание хода — крестик или нолик
    if buttons[row][col]['text'] != "": # если нажимается заполненная кнопка
        return                          # ничего не происходит
    buttons[row][col]['text'] = current_player # вместо текста вставляется символ текущего хода Х иои 0

    if check_winner():          # В случае True  вызывается сообщение
        messagebox.showinfo("Игра окончена", f"Игрок {current_player} победил!")
        return  # Остановка смены хода в случае фиксирования победителя

    current_player = "0" if current_player == "X" else "X" # Смена хода

# Функция определения победителя
def check_winner():
    for i in range(3):  # Три циклические итерации проверки по горизонтали
        if buttons[i][0]["text"] == buttons[i][1]["text"] == buttons[i][2]["text"] != "":
            return True # В случае совпадения трех кнопок по горизонтали фиксируется победа
        if buttons[0][i]["text"] == buttons[1][i]["text"] == buttons[2][i]["text"] != "":
            return True # В случае совпадения трех кнопок по вертикали фиксируется победа
    if buttons[0][0]["text"] == buttons[1][1]["text"] == buttons[2][2]["text"] != "":
        return True # В случае совпадения трех кнопок по диагонали (слева-направо)  фиксируется победа
    if buttons[0][2]["text"] == buttons[1][1]["text"] == buttons[2][0]["text"] != "":
        return True # В случае совпадения трех кнопок по диагонали (справа-налево)  фиксируется победа
    return False    # В случае несовпадения трех кнопок во всех циклических проверках никто не победил

# Функция "Рестарт" (очистка игрового поля без перезапуска игры)
def restart_game():
    global current_player   # Используем глобальную переменную для отслеживания текущего игрока
    current_player = "X"    # Возвращаем начального игрока
    # Очищаем текст у всех кнопок на игровом поле
    for row in buttons:         # внешний цикл, перебирает строки кнопок
        for btn in row:         # внутренний цикл, перебирает кнопки внутри каждой строки
            btn["text"] = ""    # удаление всех символов с игрового поля

# Создание игрового поля
for i in range(3):              # на каждой итерации цикла создается новая строка кнопок
    row = []                    # список для добавления кнопок одной строки
    for j in range(3):          # создание одной из трех кнопок внутри строки
        # В переменной btn прописываем:
        # модуль tkinter с классом Button;
        # в круглых скобках указываем аргументы:
        # текст(изначально пустой);
        # шрифт(с указанием названия шрифта и кегля);
        # ширину и высоту кнопки;
        # прописываем атрибут command, который определяет, что будет происходить при клике;
        # используем лямбда - функцию: при нажатии на кнопку будет  вызываться функция
        # on_click с аргументами(r, c), то есть ряд(row) и колонка(col), равными переменным
        # i и j соответственно.
        btn = tk.Button(window, text="", font=("Arial", 20), width=5, height=2, command=lambda r=i, c=j: on_click(r, c))
        btn.grid(row=i, column=j)  # Определение конкретного места для каждой кнопки
        row.append(btn)            # Добавление кнопки в ряд
    buttons.append(row)            # Добавление созданных кнопок в список

# Добавление кнопки "Рестарт"
restart_btn = tk.Button(window, text="Рестарт", font=("Arial", 14), command=restart_game)
restart_btn.grid(row=3, column=0, columnspan=3, pady=10)  # Правильное размещение в grid()


window.mainloop()                  # Поддержание открытия окна


